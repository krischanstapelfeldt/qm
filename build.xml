<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build-project" name="Global Poseidon" xmlns:jacoco="antlib:org.jacoco.ant" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle">
	<property environment="env" />

	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="bin.dir" value="bin" />
	<property name="release-bin.dir" value="${bin.dir}/release" />
	<property name="jacoco.dir" value="${lib.dir}/jacoco" />
	<property name="jacoco.instr.dir" location="${bin.dir}/instr" />
	<property name="jacoco.exec.file" location="${bin.dir}/jacoco.exec" />
	<property name="junit.output.dir" value="reports/junit" />

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="lib/jacoco/jacocoant.jar" />
	</taskdef>

	<taskdef resource="checkstyletask.properties" classpath="/lib/checkstyle/checkstyle-5.7-all.jar" />

	<path id="qm.classpath">
		<pathelement location="${release-bin.dir}" />
		<path refid="qm.lib" />
		<path refid="qm.lib.junit" />
	</path>

	<path id="qm.classpath.instrumented">
		<pathelement location="${jacoco.instr.dir}" />
		<path refid="qm.lib" />
		<path refid="qm.lib.junit" />
	</path>

	<path id="qm.lib">
		<pathelement location="${lib.dir}/logback/logback-classic-1.0.13.jar" />
		<pathelement location="${lib.dir}/logback/logback-core-1.0.13.jar" />
		<pathelement location="${lib.dir}/logback/slf4j-api-1.7.5.jar" />
		<pathelement location="${lib.dir}/sqlite/sqlite-jdbc-3.7.2.jar" />
	</path>

	<path id="qm.lib.junit">
		<pathelement location="${lib.dir}/junit/junit-4.11.jar" />
		<pathelement location="${lib.dir}/junit/hamcrest-core-1.3.jar" />
	</path>


	<target name="clean" description="Removes existing compile output and reports">
		<delete dir="docs/javadoc" />
		<delete dir="coverage" />
		<delete dir="jar" />
		<delete dir="inst" />
		<delete dir="bin" />
		<delete dir="junit" />
		<delete dir="reports" />
	</target>

	<target name="checkstyle" description="Generates a report of code convention violations.">
		<checkstyle config="docs/sun_checks.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="reports/checkstyle/checkstyle_report.xml" />
			<fileset dir="src" includes="**/*.java" />
		</checkstyle>
		<style in="reports/checkstyle/checkstyle_report.xml" out="reports/checkstyle/index.html" style="checkstyle.xsl" />
	</target>
	<target name="javadoc" description="Creates JavaDocs" depends="clean">
		<javadoc classpathref="qm.classpath" packagenames="de.globalposeidon.*" sourcepath="src" excludepackagenames="de.globalposeidon.Qualitaet.tests.*" defaultexcludes="yes" destdir="docs/javadoc" author="true" version="true" use="true" windowtitle="Global Poseidon - JavaDoc">
			<doctitle>
				<![CDATA[<h1>Global Poseidon - JavaDoc</h1>]]></doctitle>
		<bottom>
			<![CDATA[<i>Team Global Poseidon - Jens Felske, Sebastian Lauber, Krischan Stapelfeldt, Timm Suhl</i>]]></bottom>
	<tag name="todo" scope="all" description="To do:" />
</javadoc>
</target>

<target name="init" description="Creates output directories and copies static assets">
<mkdir dir="bin" />
<mkdir dir="bin/release" />
<copy includeemptydirs="false" todir="bin/release">
	<fileset dir="src">
		<exclude name="**/*.launch" />
		<exclude name="**/*.java" />
	</fileset>
</copy>
<mkdir dir="${jacoco.instr.dir}" />
<copy includeemptydirs="false" todir="${jacoco.instr.dir}">
	<fileset dir="src">
		<exclude name="**/*.launch" />
		<exclude name="**/*.java" />
	</fileset>
</copy>
</target>

<target name="build-project" depends="init" description="Compiles the project to bin/release">
<echo message="${ant.project.name}: ${ant.file}" />
<javac debug="true" debuglevel="${debuglevel}" destdir="${release-bin.dir}" includeantruntime="false" source="${source}" target="${target}" failonerror="true">
	<src path="src" />
	<classpath refid="qm.classpath" />
</javac>
</target>

<target name="instrument" depends="build-project" description="Generates instrumented binaries for EMMA in bin/instrumented">
<jacoco:instrument destdir="${jacoco.instr.dir}">
	<fileset dir="${release-bin.dir}" includes="**/*.class" />
</jacoco:instrument>
</target>

<target name="AllTests" description="Runs the complete testsuite" depends="instrument">
<mkdir dir="${junit.output.dir}" />
<jacoco:coverage destfile="${jacoco.exec.file}">
	<junit fork="yes" printsummary="yes" forkmode="once">
		<formatter type="xml" />
		<test name="de.globalposeidon.Qualitaet.tests.AllTests" todir="${junit.output.dir}" />
		<classpath refid="qm.classpath.instrumented" />
	</junit>
</jacoco:coverage>
</target>

<target name="junitreport" depends="AllTests" description="Generates a report from JUnit output">
<junitreport todir="${junit.output.dir}">
	<fileset dir="${junit.output.dir}">
		<include name="TEST-*.xml" />
	</fileset>
	<report format="frames" todir="${junit.output.dir}" />
</junitreport>
</target>

<target name="jacocoreport" depends="AllTests">
<jacoco:report>
	<executiondata>
		<file file="${jacoco.exec.file}" />
	</executiondata>
	<structure name="${ant.project.name}">
		<classfiles>
			<fileset dir="bin/release" />
		</classfiles>
		<sourcefiles encoding="UTF-8">
			<fileset dir="src" />
		</sourcefiles>
	</structure>

	<html destdir="reports/jacoco" />
</jacoco:report>

</target>

<target name="Launcher" depends="clean, init, build-project">
<java classname="de.globalposeidon.Qualitaet.Launcher" failonerror="true" fork="yes">
	<classpath refid="qm.classpath" />
</java>
</target>

<target name="create_run_jar" depends="clean, init, build-project">
<jar destfile="bin/jar/globalposeidon.jar" filesetmanifest="mergewithoutmain">
	<manifest>
		<attribute name="Main-Class" value="de.globalposeidon.Qualitaet.Launcher" />
		<attribute name="Class-Path" value="." />
	</manifest>
	<fileset dir="bin/release" />
	<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/logback/logback-classic-1.0.13.jar" />
	<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/logback/logback-core-1.0.13.jar" />
	<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/logback/slf4j-api-1.7.5.jar" />
	<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/sqlite/sqlite-jdbc-3.7.2.jar" />
</jar>
</target>

<target name="jenkins" depends="clean,javadoc,init,build-project,instrument,junitreport,jacocoreport,create_run_jar" />
</project>
