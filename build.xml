<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build-project" name="qm">
	<property environment="env" />

	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="emma.dir" value="${lib.dir}/emma/" />
	<property name="junit.output.dir" value="reports/junit" />

	<path id="qm.classpath">
		<pathelement location="bin/release" />
		<path refid="qm.lib" />
		<path refid="qm.lib.junit" />
	</path>

	<path id="qm.classpath.instrumented">
		<pathelement location="bin/instrumented" />
		<path refid="qm.lib" />
		<path refid="qm.lib.junit" />
		<!--<pathelement location="bin/release" />-->
	</path>

	<path id="qm.lib">
		<pathelement location="${lib.dir}/logback/logback-classic-1.0.13.jar" />
		<pathelement location="${lib.dir}/logback/logback-core-1.0.13.jar" />
		<pathelement location="${lib.dir}/logback/slf4j-api-1.7.5.jar" />
		<pathelement location="${lib.dir}/sqlite/sqlite-jdbc-3.7.2.jar" />
	</path>

	<path id="qm.lib.junit">
		<pathelement location="${lib.dir}/junit/junit-4.11.jar" />
		<pathelement location="${lib.dir}/junit/hamcrest-core-1.3.jar" />
	</path>


	<path id="emma.lib">
		<pathelement location="${emma.dir}/emma.jar" />
		<pathelement location="${emma.dir}/emma_ant.jar" />
	</path>

	<taskdef resource="emma_ant.properties">
		<classpath>
			<pathelement location="lib/emma/emma.jar" />
			<pathelement location="lib/emma/emma_ant.jar" />
		</classpath>
	</taskdef>

	<target name="clean" description="Removes existing compile output and reports">
		<delete dir="coverage" />
		<delete dir="inst" />
		<delete dir="bin" />
		<delete dir="junit" />
		<delete dir="reports" />
	</target>

	<target name="init" description="Creates output directories and copies static assets">
		<mkdir dir="bin" />
		<mkdir dir="bin/release" />
		<copy includeemptydirs="false" todir="bin/release">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<mkdir dir="bin/instrumented" />
		<copy includeemptydirs="false" todir="bin/instrumented">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target depends="init" name="build-project" description="Compiles the project to bin/release">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin/release" includeantruntime="false" source="${source}" target="${target}" failonerror="true">
			<src path="src" />
			<classpath refid="qm.classpath" />
		</javac>
	</target>

	<target name="instrument" depends="build-project" description="Generates instrumented binaries for EMMA in bin/instrumented">
		<mkdir dir="bin/instrumented" />
		<emma verbosity="trace1">
			<instr instrpath="bin/release" destdir="bin/instrumented" metadatafile="bin/metadata.emma" merge="true" />
		</emma>
	</target>

	<target name="AllTests" description="Runs the complete testsuite">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="yes">
			<formatter type="xml" />
			<classpath refid="qm.classpath.instrumented" />
			<jvmarg value="-Demma.coverage.out.file=bin/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			<test name="de.globalposeidon.Qualitaet.tests.AllTests" todir="${junit.output.dir}" />
			
			<!-- HIER WIRDS PROBLEMATISCH
				wenn du mit qm.classpath baust, gehts, dann nimmt der aber die nicht instrumentierte Version,
				die keine Daten für EMMA liefert, wenn du mit qm.classpath.instrumented baust, dann wird
				der Test nicht ausgeführt (nur 1 error in der Konsole) aber in der /reports/junit/TEST-de.glo...
				steht folgendes:
					<error message="Illegal local variable table length 5 in method de.globalposeidon.Qualitaet.tests.AllTests.&lt;init&gt;()V" type="java.lang.ClassFormatError">java.lang.ClassFormatError: Illegal local variable table length 5 in method de.globalposeidon.Qualitaet.tests.AllTests.&lt;init&gt;()V
						at java.lang.Class.forName0(Native Method)
						at java.lang.Class.forName(Class.java:190)
					</error>
			-->
			<!-- <classpath refid="qm.classpath" /> -->
		</junit>
	</target>

	<target name="emmareport" depends="instrument,AllTests" description="Generates a report on coverage with EMMA">
		<emma enabled="true" verbosity="verbose">
			<report sourcepath="src">
				<fileset dir="bin" includes="*.emma" />
				<html outfile="reports/emma.html" />
			</report>
		</emma>
	</target>

	<target name="junitreport" depends="AllTests" description="Generates a report from JUnit output">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>

	<target name="Launcher">
		<java classname="de.globalposeidon.Qualitaet.Launcher" failonerror="true" fork="yes">
			<classpath refid="qm.classpath" />
		</java>
	</target>

	<target name="create_run_jar">
		<jar destfile="bin/jar/globalposeidon.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="de.globalposeidon.Qualitaet.Launcher" />
				<attribute name="Class-Path" value="." />
			</manifest>
			<fileset dir="bin/release" />
			<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/logback/logback-classic-1.0.13.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/logback/logback-core-1.0.13.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/logback/slf4j-api-1.7.5.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib.dir}/sqlite/sqlite-jdbc-3.7.2.jar" />
		</jar>
	</target>

	<target name="jenkins" depends="clean,init,build-project,emmareport,junitreport,create_run_jar" />
</project>
